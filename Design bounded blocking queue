class BoundedBlockingQueue(object):
    def __init__(self, capacity: int):
        self.queue = []
        self.capacity = capacity
        
    def enqueue(self, element: int) -> None:
        while True:
            if len(self.queue) > self.capacity:
                time.sleep(0.001)
            else:
                break
        self.queue.insert(0, element)
        
    def dequeue(self) -> int:
        while True:
            if len(self.queue) == 0:
                time.sleep(0.001)
            else:
                return self.queue.pop() 
        
    def size(self) -> int:
        return len(self.queue)
